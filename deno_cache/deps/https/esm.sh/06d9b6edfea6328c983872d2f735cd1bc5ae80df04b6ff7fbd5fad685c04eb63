/* esm.sh - esbuild bundle(y-websocket@1.4.5) deno production */
import __Process$ from "https://deno.land/std@0.177.0/node/process.ts";import"yjs";import*as r from"/v119/lib0@0.2.74/X-ZS95anM/deno/broadcastchannel.js";import*as b from"/v119/lib0@0.2.74/X-ZS95anM/deno/time.js";import*as n from"/v119/lib0@0.2.74/X-ZS95anM/deno/encoding.js";import*as y from"/v119/lib0@0.2.74/X-ZS95anM/deno/decoding.js";import*as i from"/v119/y-protocols@1.0.5/X-ZS95anM/deno/sync.js";import*as H from"/v119/y-protocols@1.0.5/X-ZS95anM/deno/auth.js";import*as a from"/v119/y-protocols@1.0.5/X-ZS95anM/deno/awareness.js";import{Observable as B}from"/v119/lib0@0.2.74/X-ZS95anM/deno/observable.js";import*as U from"/v119/lib0@0.2.74/X-ZS95anM/deno/math.js";import*as C from"/v119/lib0@0.2.74/X-ZS95anM/deno/url.js";var w=0,E=3,u=1,D=2,m=[];m[w]=(e,s,t,c,o)=>{n.writeVarUint(e,w);let d=i.readSyncMessage(s,e,t.doc,t);c&&d===i.messageYjsSyncStep2&&!t.synced&&(t.synced=!0)};m[E]=(e,s,t,c,o)=>{n.writeVarUint(e,u),n.writeVarUint8Array(e,a.encodeAwarenessUpdate(t.awareness,Array.from(t.awareness.getStates().keys())))};m[u]=(e,s,t,c,o)=>{a.applyAwarenessUpdate(t.awareness,y.readVarUint8Array(s),t)};m[D]=(e,s,t,c,o)=>{H.readAuthMessage(s,t.doc,(d,g)=>L(t,g))};var p=3e4,L=(e,s)=>console.warn(`Permission denied to access ${e.url}.
${s}`),I=(e,s,t)=>{let c=y.createDecoder(s),o=n.createEncoder(),d=y.readVarUint(c),g=e.messageHandlers[d];return g?g(o,c,e,t,d):console.error("Unable to compute message"),o},T=e=>{if(e.shouldConnect&&e.ws===null){let s=new e._WS(e.url);s.binaryType="arraybuffer",e.ws=s,e.wsconnecting=!0,e.wsconnected=!1,e.synced=!1,s.onmessage=t=>{e.wsLastMessageReceived=b.getUnixTime();let c=I(e,new Uint8Array(t.data),!0);n.length(c)>1&&s.send(n.toUint8Array(c))},s.onerror=t=>{e.emit("connection-error",[t,e])},s.onclose=t=>{e.emit("connection-close",[t,e]),e.ws=null,e.wsconnecting=!1,e.wsconnected?(e.wsconnected=!1,e.synced=!1,a.removeAwarenessStates(e.awareness,Array.from(e.awareness.getStates().keys()).filter(c=>c!==e.doc.clientID),e),e.emit("status",[{status:"disconnected"}])):e.wsUnsuccessfulReconnects++,setTimeout(T,U.min(U.pow(2,e.wsUnsuccessfulReconnects)*100,e.maxBackoffTime),e)},s.onopen=()=>{e.wsLastMessageReceived=b.getUnixTime(),e.wsconnecting=!1,e.wsconnected=!0,e.wsUnsuccessfulReconnects=0,e.emit("status",[{status:"connected"}]);let t=n.createEncoder();if(n.writeVarUint(t,w),i.writeSyncStep1(t,e.doc),s.send(n.toUint8Array(t)),e.awareness.getLocalState()!==null){let c=n.createEncoder();n.writeVarUint(c,u),n.writeVarUint8Array(c,a.encodeAwarenessUpdate(e.awareness,[e.doc.clientID])),s.send(n.toUint8Array(c))}},e.emit("status",[{status:"connecting"}])}},_=(e,s)=>{e.wsconnected&&e.ws.send(s),e.bcconnected&&r.publish(e.bcChannel,s,e)},V=class extends B{constructor(s,t,c,{connect:o=!0,awareness:d=new a.Awareness(c),params:g={},WebSocketPolyfill:x=WebSocket,resyncInterval:S=-1,maxBackoffTime:M=2500,disableBc:R=!1}={}){for(super();s[s.length-1]==="/";)s=s.slice(0,s.length-1);let P=C.encodeQueryParams(g);this.maxBackoffTime=M,this.bcChannel=s+"/"+t,this.url=s+"/"+t+(P.length===0?"":"?"+P),this.roomname=t,this.doc=c,this._WS=x,this.awareness=d,this.wsconnected=!1,this.wsconnecting=!1,this.bcconnected=!1,this.disableBc=R,this.wsUnsuccessfulReconnects=0,this.messageHandlers=m.slice(),this._synced=!1,this.ws=null,this.wsLastMessageReceived=0,this.shouldConnect=o,this._resyncInterval=0,S>0&&(this._resyncInterval=setInterval(()=>{if(this.ws&&this.ws.readyState===WebSocket.OPEN){let l=n.createEncoder();n.writeVarUint(l,w),i.writeSyncStep1(l,c),this.ws.send(n.toUint8Array(l))}},S)),this._bcSubscriber=(l,f)=>{if(f!==this){let h=I(this,new Uint8Array(l),!1);n.length(h)>1&&r.publish(this.bcChannel,n.toUint8Array(h),this)}},this._updateHandler=(l,f)=>{if(f!==this){let h=n.createEncoder();n.writeVarUint(h,w),i.writeUpdate(h,l),_(this,n.toUint8Array(h))}},this.doc.on("update",this._updateHandler),this._awarenessUpdateHandler=({added:l,updated:f,removed:h},W)=>{let k=l.concat(f).concat(h),A=n.createEncoder();n.writeVarUint(A,u),n.writeVarUint8Array(A,a.encodeAwarenessUpdate(d,k)),_(this,n.toUint8Array(A))},this._unloadHandler=()=>{a.removeAwarenessStates(this.awareness,[c.clientID],"window unload")},typeof document<"u"?window.addEventListener("unload",this._unloadHandler):typeof __Process$<"u"&&__Process$.on("exit",this._unloadHandler),d.on("update",this._awarenessUpdateHandler),this._checkInterval=setInterval(()=>{this.wsconnected&&p<b.getUnixTime()-this.wsLastMessageReceived&&this.ws.close()},p/10),o&&this.connect()}get synced(){return this._synced}set synced(s){this._synced!==s&&(this._synced=s,this.emit("synced",[s]),this.emit("sync",[s]))}destroy(){this._resyncInterval!==0&&clearInterval(this._resyncInterval),clearInterval(this._checkInterval),this.disconnect(),typeof document<"u"?window.removeEventListener("unload",this._unloadHandler):typeof __Process$<"u"&&__Process$.off("exit",this._unloadHandler),this.awareness.off("update",this._awarenessUpdateHandler),this.doc.off("update",this._updateHandler),super.destroy()}connectBc(){if(this.disableBc)return;this.bcconnected||(r.subscribe(this.bcChannel,this._bcSubscriber),this.bcconnected=!0);let s=n.createEncoder();n.writeVarUint(s,w),i.writeSyncStep1(s,this.doc),r.publish(this.bcChannel,n.toUint8Array(s),this);let t=n.createEncoder();n.writeVarUint(t,w),i.writeSyncStep2(t,this.doc),r.publish(this.bcChannel,n.toUint8Array(t),this);let c=n.createEncoder();n.writeVarUint(c,E),r.publish(this.bcChannel,n.toUint8Array(c),this);let o=n.createEncoder();n.writeVarUint(o,u),n.writeVarUint8Array(o,a.encodeAwarenessUpdate(this.awareness,[this.doc.clientID])),r.publish(this.bcChannel,n.toUint8Array(o),this)}disconnectBc(){let s=n.createEncoder();n.writeVarUint(s,u),n.writeVarUint8Array(s,a.encodeAwarenessUpdate(this.awareness,[this.doc.clientID],new Map)),_(this,n.toUint8Array(s)),this.bcconnected&&(r.unsubscribe(this.bcChannel,this._bcSubscriber),this.bcconnected=!1)}disconnect(){this.shouldConnect=!1,this.disconnectBc(),this.ws!==null&&this.ws.close()}connect(){this.shouldConnect=!0,!this.wsconnected&&this.ws===null&&(T(this),this.connectBc())}};export{V as WebsocketProvider,D as messageAuth,u as messageAwareness,E as messageQueryAwareness,w as messageSync};
//# sourceMappingURL=y-websocket.mjs.map