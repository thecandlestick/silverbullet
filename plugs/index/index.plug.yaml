name: index
syntax:
  Hashtag:
    firstCharacters:
      - "#"
    regex: "#[^#\\d\\s\\[\\]]+\\w+"
    className: sb-hashtag
  NamedAnchor:
    firstCharacters:
      - "$"
    regex: "\\$[a-zA-Z\\.\\-\\/]+[\\w\\.\\-\\/]*"
    className: sb-named-anchor
functions:
  loadBuiltinsIntoIndex:
    path: builtins.ts:loadBuiltinsIntoIndex
    env: server
    events:
      - system:ready

  # Public API
  batchSet:
    path: api.ts:batchSet
    env: server
  query:
    path: api.ts:query
  indexObjects:
    path: api.ts:indexObjects
    env: server
  queryObjects:
    path: api.ts:queryObjects
    # Note: not setting env: server to allow for client-side datastore query caching
  getObjectByRef:
    path: api.ts:getObjectByRef
    env: server

  objectSourceProvider:
    path: api.ts:objectSourceProvider
    events:
    - query:*
  discoverSources:
    path: api.ts:discoverSources
    events:
    - query_
  clearIndex:
    path: api.ts:clearIndex
    env: server

  clearDSIndex:
    path: api.ts:clearPageIndex
    env: server
    events:
      - page:saved
      - page:deleted
      
  parseIndexTextRepublish:
    path: "./command.ts:parseIndexTextRepublish"
    env: server
    events:
      - page:index_text

  reindexSpaceCommand:
    path: "./command.ts:reindexCommand"
    command:
      name: "Space: Reindex"
  processIndexQueue:
    path: ./command.ts:processIndexQueue
    mqSubscriptions:
    - queue: indexQueue
      batchSize: 10
      autoAck: true
  reindexSpace:
    path: "./command.ts:reindexSpace"
    env: server

  # Attachments
  attachmentQueryProvider:
    path: ./attachment.ts:attachmentQueryProvider
    events:
      - query:attachment

  indexPage:
    path: page.ts:indexPage
    events:
      - page:index

  indexParagraphs:
    path: "./paragraph.ts:indexParagraphs"
    events:
    - page:index

  # Backlinks
  indexLinks:
    path: "./page_links.ts:indexLinks"
    events:
    - page:index

  attributeComplete:
    path: "./attributes.ts:attributeComplete"
    events:
    - editor:complete

  objectAttributeCompleter:
    path: ./attributes.ts:objectAttributeCompleter
    events:
    - attribute:complete:*

  # Item indexing
  indexItem:
    path: "./item.ts:indexItems"
    events:
    - page:index

  # Anchors
  indexAnchors:
    path: "./anchor.ts:indexAnchors"
    events:
    - page:index
  anchorComplete:
    path: "./anchor.ts:anchorComplete"
    events:
      - editor:complete
  
  # Data
  indexData:
    path: data.ts:indexData
    events:
    - page:index

  # Hashtags
  indexTags:
    path: tags.ts:indexTags
    events:
    - page:index
  tagComplete:
    path: tags.ts:tagComplete
    events:
      - editor:complete

  renamePageCommand:
    path: "./refactor.ts:renamePageCommand"
    command:
      name: "Page: Rename"
      mac: Cmd-Alt-r
      key: Ctrl-Alt-r
      page: ""
  renamePrefixCommand:
    path: "./refactor.ts:renamePrefixCommand"
    command:
      name: "Page: Batch Rename Prefix"

  # Refactoring Commands
  extractToPageCommand:
    path: ./refactor.ts:extractToPageCommand
    command:
      name: "Page: Extract"

  # TOC
  tocWidget:
    path: toc.ts:widget
    codeWidget: toc
    renderMode: markdown

  # Template Widgets
  renderTemplateWidgetsTop:
    path: template_widget.ts:renderTemplateWidgets
    env: client
    panelWidget: top

  renderTemplateWidgetsBottom:
    path: template_widget.ts:renderTemplateWidgets
    env: client
    panelWidget: bottom

  refreshWidgets:
    path: template_widget.ts:refreshWidgets

  lintYAML:
    path: lint.ts:lintYAML
    events:
    - editor:lint
