export function isObject(object) {
    return typeof object == "object" && object !== null && object.constructor === Object;
}
export function sortObject(normalized) {
    const sorted = {};
    const sortedKeys = Object.keys(normalized).sort((a, b)=>b.length - a.length);
    for (const key of sortedKeys){
        sorted[key] = normalized[key];
    }
    return sorted;
}
export function isImportMap(importMap) {
    return isObject(importMap) && (importMap.imports !== undefined ? isImports(importMap.imports) : true) && (importMap.scopes !== undefined ? isScopes(importMap.scopes) : true);
}
export function isImports(importsMap) {
    return isObject(importsMap);
}
export function isScopes(scopes) {
    return isObject(scopes) && Object.values(scopes).every((value)=>isSpecifierMap(value));
}
export function isSpecifierMap(specifierMap) {
    return isObject(specifierMap);
}
export function isURL(url) {
    try {
        new URL(url);
        return true;
    } catch  {
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaW1wb3J0bWFwQDAuMi4xL191dGlsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgU3BlY2lmaWVyTWFwIHtcbiAgW3VybDogc3RyaW5nXTogc3RyaW5nIHwgbnVsbDtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU2NvcGVzIHtcbiAgW3VybDogc3RyaW5nXTogU3BlY2lmaWVyTWFwO1xufVxuZXhwb3J0IGludGVyZmFjZSBJbXBvcnRNYXAge1xuICBpbXBvcnRzPzogU3BlY2lmaWVyTWFwO1xuICBzY29wZXM/OiBTY29wZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChvYmplY3Q6IHVua25vd24pOiBvYmplY3QgaXMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4ge1xuICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PSBcIm9iamVjdFwiICYmIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRPYmplY3QoXG4gIG5vcm1hbGl6ZWQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuKTogUmVjb3JkPHN0cmluZywgdW5rbm93bj4ge1xuICBjb25zdCBzb3J0ZWQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge307XG4gIGNvbnN0IHNvcnRlZEtleXMgPSBPYmplY3Qua2V5cyhub3JtYWxpemVkKVxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmxlbmd0aCAtIGEubGVuZ3RoKTtcbiAgZm9yIChjb25zdCBrZXkgb2Ygc29ydGVkS2V5cykge1xuICAgIHNvcnRlZFtrZXldID0gbm9ybWFsaXplZFtrZXldO1xuICB9XG4gIHJldHVybiBzb3J0ZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNJbXBvcnRNYXAoaW1wb3J0TWFwOiB1bmtub3duKTogaW1wb3J0TWFwIGlzIEltcG9ydE1hcCB7XG4gIHJldHVybiBpc09iamVjdChpbXBvcnRNYXApICYmXG4gICAgKGltcG9ydE1hcC5pbXBvcnRzICE9PSB1bmRlZmluZWQgPyBpc0ltcG9ydHMoaW1wb3J0TWFwLmltcG9ydHMpIDogdHJ1ZSkgJiZcbiAgICAoaW1wb3J0TWFwLnNjb3BlcyAhPT0gdW5kZWZpbmVkID8gaXNTY29wZXMoaW1wb3J0TWFwLnNjb3BlcykgOiB0cnVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0ltcG9ydHMoXG4gIGltcG9ydHNNYXA6IHVua25vd24sXG4pOiBpbXBvcnRzTWFwIGlzIEltcG9ydE1hcCB7XG4gIHJldHVybiBpc09iamVjdChpbXBvcnRzTWFwKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Njb3BlcyhcbiAgc2NvcGVzOiB1bmtub3duLFxuKTogc2NvcGVzIGlzIFNjb3BlcyB7XG4gIHJldHVybiBpc09iamVjdChzY29wZXMpICYmXG4gICAgT2JqZWN0LnZhbHVlcyhzY29wZXMpLmV2ZXJ5KCh2YWx1ZSkgPT4gaXNTcGVjaWZpZXJNYXAodmFsdWUpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NwZWNpZmllck1hcChcbiAgc3BlY2lmaWVyTWFwOiB1bmtub3duLFxuKTogc3BlY2lmaWVyTWFwIGlzIFNwZWNpZmllck1hcCB7XG4gIHJldHVybiBpc09iamVjdChzcGVjaWZpZXJNYXApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVVJMKHVybDogdW5rbm93bik6IGJvb2xlYW4ge1xuICB0cnkge1xuICAgIG5ldyBVUkwodXJsIGFzIHN0cmluZyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE9BQU8sU0FBUyxTQUFTLE1BQWUsRUFBcUM7SUFDM0UsT0FBTyxPQUFPLFVBQVUsWUFBWSxXQUFXLElBQUksSUFDakQsT0FBTyxXQUFXLEtBQUs7QUFDM0IsQ0FBQztBQUNELE9BQU8sU0FBUyxXQUNkLFVBQW1DLEVBQ1Y7SUFDekIsTUFBTSxTQUFrQyxDQUFDO0lBQ3pDLE1BQU0sYUFBYSxPQUFPLElBQUksQ0FBQyxZQUM1QixJQUFJLENBQUMsQ0FBQyxHQUFHLElBQU0sRUFBRSxNQUFNLEdBQUcsRUFBRSxNQUFNO0lBQ3JDLEtBQUssTUFBTSxPQUFPLFdBQVk7UUFDNUIsTUFBTSxDQUFDLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSTtJQUMvQjtJQUNBLE9BQU87QUFDVCxDQUFDO0FBQ0QsT0FBTyxTQUFTLFlBQVksU0FBa0IsRUFBMEI7SUFDdEUsT0FBTyxTQUFTLGNBQ2QsQ0FBQyxVQUFVLE9BQU8sS0FBSyxZQUFZLFVBQVUsVUFBVSxPQUFPLElBQUksSUFBSSxLQUN0RSxDQUFDLFVBQVUsTUFBTSxLQUFLLFlBQVksU0FBUyxVQUFVLE1BQU0sSUFBSSxJQUFJO0FBQ3ZFLENBQUM7QUFDRCxPQUFPLFNBQVMsVUFDZCxVQUFtQixFQUNNO0lBQ3pCLE9BQU8sU0FBUztBQUNsQixDQUFDO0FBQ0QsT0FBTyxTQUFTLFNBQ2QsTUFBZSxFQUNHO0lBQ2xCLE9BQU8sU0FBUyxXQUNkLE9BQU8sTUFBTSxDQUFDLFFBQVEsS0FBSyxDQUFDLENBQUMsUUFBVSxlQUFlO0FBQzFELENBQUM7QUFDRCxPQUFPLFNBQVMsZUFDZCxZQUFxQixFQUNTO0lBQzlCLE9BQU8sU0FBUztBQUNsQixDQUFDO0FBQ0QsT0FBTyxTQUFTLE1BQU0sR0FBWSxFQUFXO0lBQzNDLElBQUk7UUFDRixJQUFJLElBQUk7UUFDUixPQUFPLElBQUk7SUFDYixFQUFFLE9BQU07UUFDTixPQUFPLEtBQUs7SUFDZDtBQUNGLENBQUMifQ==