/* esm.sh - esbuild bundle(lib0@0.2.74/function) deno production */
var k=Array.from,p=(t,e)=>{for(let r=0;r<t.length;r++)if(!e(t[r],r,t))return!1;return!0};var l=(t,e)=>t.length===e.length&&p(t,(r,n)=>r===e[n]);var f=Array.isArray;var a=Object.keys;var o=t=>a(t).length;var y=(t,e)=>{for(let r in t)if(!e(t[r],r))return!1;return!0},s=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),u=(t,e)=>t===e||o(t)===o(e)&&y(t,(r,n)=>(r!==void 0||s(e,n))&&e[n]===r);var h=(t,e,r=0)=>{try{for(;r<t.length;r++)t[r](...e)}finally{r<t.length&&h(t,e,r+1)}},m=()=>{},d=t=>t(),A=t=>t,g=(t,e)=>t===e,q=(t,e)=>t===e||t!=null&&e!=null&&t.constructor===e.constructor&&(f(t)&&l(t,e)||typeof t=="object"&&u(t,e)),c=(t,e)=>{if(t==null||e==null)return g(t,e);if(t.constructor!==e.constructor)return!1;if(t===e)return!0;switch(t.constructor){case ArrayBuffer:t=new Uint8Array(t),e=new Uint8Array(e);case Uint8Array:{if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;break}case Set:{if(t.size!==e.size)return!1;for(let r of t)if(!e.has(r))return!1;break}case Map:{if(t.size!==e.size)return!1;for(let r of t.keys())if(!e.has(r)||!c(t.get(r),e.get(r)))return!1;break}case Object:if(o(t)!==o(e))return!1;for(let r in t)if(!s(t,r)||!c(t[r],e[r]))return!1;break;case Array:if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(!c(t[r],e[r]))return!1;break;default:return!1}return!0},O=(t,e)=>e.includes(t);export{d as apply,h as callAll,c as equalityDeep,q as equalityFlat,g as equalityStrict,A as id,O as isOneOf,m as nop};
//# sourceMappingURL=function.js.map