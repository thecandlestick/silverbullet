/* esm.sh - esbuild bundle(y-protocols@1.0.5/sync) deno production */
import*as n from"/v119/lib0@0.2.74/X-ZS95anM/deno/encoding.js";import*as o from"/v119/lib0@0.2.74/X-ZS95anM/deno/decoding.js";import*as a from"yjs";var c=0,p=1,d=2,w=(e,t)=>{n.writeVarUint(e,c);let r=a.encodeStateVector(t);n.writeVarUint8Array(e,r)},y=(e,t,r)=>{n.writeVarUint(e,p),n.writeVarUint8Array(e,a.encodeStateAsUpdate(t,r))},S=(e,t,r)=>y(t,r,o.readVarUint8Array(e)),g=(e,t,r)=>{try{a.applyUpdate(t,o.readVarUint8Array(e),r)}catch(s){console.error("Caught error while handling a Yjs update",s)}},m=(e,t)=>{n.writeVarUint(e,d),n.writeVarUint8Array(e,t)},U=g,x=(e,t,r,s)=>{let i=o.readVarUint(e);switch(i){case c:S(e,t,r);break;case p:g(e,r,s);break;case d:U(e,r,s);break;default:throw new Error("Unknown message type")}return i};export{c as messageYjsSyncStep1,p as messageYjsSyncStep2,d as messageYjsUpdate,x as readSyncMessage,S as readSyncStep1,g as readSyncStep2,U as readUpdate,w as writeSyncStep1,y as writeSyncStep2,m as writeUpdate};
//# sourceMappingURL=sync.js.map